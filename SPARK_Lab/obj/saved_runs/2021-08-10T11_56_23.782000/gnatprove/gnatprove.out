Summary of SPARK analysis
=========================

-------------------------------------------------------------------------------------------------------------
SPARK Analysis results        Total       Flow   CodePeer                      Provers   Justified   Unproved
-------------------------------------------------------------------------------------------------------------
Data Dependencies                 1          1          .                            .           .          .
Flow Dependencies                 2          2          .                            .           .          .
Initialization                    2          2          .                            .           .          .
Non-Aliasing                      .          .          .                            .           .          .
Run-time Checks                  18          .          .                    18 (CVC4)           .          .
Assertions                        2          .          .                     2 (CVC4)           .          .
Functional Contracts              3          .          .    3 (CVC4 75%, Trivial 25%)           .          .
LSP Verification                  .          .          .                            .           .          .
Termination                       1          .          .                     1 (CVC4)           .          .
Concurrency                       .          .          .                            .           .          .
-------------------------------------------------------------------------------------------------------------
Total                            29    5 (17%)          .                     24 (83%)           .          .


max steps used for successful proof: 1

Analyzed 2 units
in unit pkg_multiply, 2 subprograms and packages out of 2 analyzed
  Pkg_Multiply at pkg_multiply.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Pkg_Multiply.Multiply at pkg_multiply.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (19 checks)
in unit pkg_subtract, 2 subprograms and packages out of 2 analyzed
  Pkg_Subtract at pkg_subtract.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Pkg_Subtract.Subtract at pkg_subtract.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (5 checks)
